<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <AssemblyTitle>CSCore</AssemblyTitle>
    <Product>CSCore</Product>
    <Description>.NET Sound Library</Description>
    <Copyright>Florian R.</Copyright>
    <AssemblyVersion>1.2.1.2</AssemblyVersion>
    <FileVersion>1.2.1.2</FileVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PostBuildEvent>@echo off &amp; setLocal EnableDELAYedeXpansion
      chcp 65001

      set errorCode=0

      set target=$(TargetPath)
      set project=$(ProjectPath)

      set sdk=%25PROGRAMFILES(x86)%25\Microsoft SDKs\Windows\v8.1A\bin\NETFX 4.5.1 Tools
      set framework=%25WINDIR%25\Microsoft.NET\Framework\v2.0.50727
      set inlineILCompiler=$(SolutionDir)Tools\InlineILCompiler\InlineILCompiler\bin\$(ConfigurationName)\InlineILCompiler.exe
      set cscli=$(SolutionDir)Tools\CSCli\bin\$(ConfigurationName)\CSCli.exe

      IF exist "%25sdk%25\." (
      echo OK: The Microsoft Windows SDK was found.
      ) else (
      echo FAILED: The Microsoft Windows SDK Dir was not found. Check the following path: "%25sdk%25"
      goto EXIT_ERR
      )
      IF exist "%25framework%25\." (
      echo OK: The .NET Framework Dir was found.
      ) else (
      echo FAILED: The Framework-Dir was not found. Check the following path: "%25framework%25"
      goto EXIT_ERR
      )
      IF exist "%25inlineILCompiler%25" (
      echo OK: Found the inline-il-compiler.
      ) else (
      echo FAILED: The inline-il-compiler was not found. Check the following path: "%25inlineILCompiler%25"
      goto EXIT_ERR
      )
      IF exist "%25cscli%25" (
      echo OK: Found the cscli-compiler.
      ) else (
      echo FAILED: The cscli was not found. Check the following path: "%25cscli%25"
      goto EXIT_ERR
      )

      if $(ConfigurationName) == Debug (
      echo Build-Configuration: DEBUG
      echo    DEBUG=IMPL
      echo    NO OPTIMIZE
      set ilasm_args=/DLL /DEBUG=IMPL
      ) else (
      if $(ConfigurationName) == Release (
      echo Build-Configuration: RELEASE
      echo    NO DEBUG
      echo    OPTIMIZE
      set ilasm_args=/DLL /OPTIMIZE
      ) else (
      echo FAILED: Invalid Configuration.
      goto EXIT_ERR
      )
      )

      echo.
      echo.
      echo Calling the inline-il-compiler ...
      call "%25inlineILCompiler%25"

      echo.
      echo.
      echo Calling CSCli ...
      call "%25cscli%25" -file:"$(TargetPath)" -r:"RemoveObjAttribute" -c:"CSCalliAttribute"

      :EXIT
      EXIT /B %25errorCode%25

      :EXIT_ERR
      set errorCode=-1
      goto EXIT
</PostBuildEvent>
    <PreBuildEvent />
    <PostBuildEvent>@echo off &amp; setLocal EnableDELAYedeXpansion
      chcp 65001

      set errorCode=0

      set target=$(TargetPath)
      set project=$(ProjectPath)

      set sdk=%25PROGRAMFILES(x86)%25\Microsoft SDKs\Windows\v8.1A\bin\NETFX 4.5.1 Tools
      set framework=%25WINDIR%25\Microsoft.NET\Framework\v2.0.50727
      set inlineILCompiler=$(SolutionDir)Tools\InlineILCompiler\InlineILCompiler\bin\$(ConfigurationName)\InlineILCompiler.exe
      set cscli=$(SolutionDir)Tools\CSCli\bin\$(ConfigurationName)\CSCli.exe

      IF exist "%25sdk%25\." (
      echo OK: The Microsoft Windows SDK was found.
      ) else (
      echo FAILED: The Microsoft Windows SDK Dir was not found. Check the following path: "%25sdk%25"
      goto EXIT_ERR
      )
      IF exist "%25framework%25\." (
      echo OK: The .NET Framework Dir was found.
      ) else (
      echo FAILED: The Framework-Dir was not found. Check the following path: "%25framework%25"
      goto EXIT_ERR
      )
      IF exist "%25inlineILCompiler%25" (
      echo OK: Found the inline-il-compiler.
      ) else (
      echo FAILED: The inline-il-compiler was not found. Check the following path: "%25inlineILCompiler%25"
      goto EXIT_ERR
      )
      IF exist "%25cscli%25" (
      echo OK: Found the cscli-compiler.
      ) else (
      echo FAILED: The cscli was not found. Check the following path: "%25cscli%25"
      goto EXIT_ERR
      )

      if $(ConfigurationName) == Debug (
      echo Build-Configuration: DEBUG
      echo    DEBUG=IMPL
      echo    NO OPTIMIZE
      set ilasm_args=/DLL /DEBUG=IMPL
      ) else (
      if $(ConfigurationName) == Release (
      echo Build-Configuration: RELEASE
      echo    NO DEBUG
      echo    OPTIMIZE
      set ilasm_args=/DLL /OPTIMIZE
      ) else (
      echo FAILED: Invalid Configuration.
      goto EXIT_ERR
      )
      )

      echo.
      echo.
      echo Calling the inline-il-compiler ...
      call "%25inlineILCompiler%25"

      echo.
      echo.
      echo Calling CSCli ...
      call "%25cscli%25" -file:"$(TargetPath)" -r:"RemoveObjAttribute" -c:"CSCalliAttribute"

      :EXIT
      EXIT /B %25errorCode%25

      :EXIT_ERR
      set errorCode=-1
      goto EXIT
</PostBuildEvent>
    <PreBuildEvent />
    <PostBuildEvent>@echo off &amp; setLocal EnableDELAYedeXpansion
      chcp 65001

      set errorCode=0

      set target=$(TargetPath)
      set project=$(ProjectPath)

      set sdk=%25PROGRAMFILES(x86)%25\Microsoft SDKs\Windows\v8.1A\bin\NETFX 4.5.1 Tools
      set framework=%25WINDIR%25\Microsoft.NET\Framework\v2.0.50727
      set inlineILCompiler=$(SolutionDir)Tools\InlineILCompiler\InlineILCompiler\bin\$(ConfigurationName)\InlineILCompiler.exe
      set cscli=$(SolutionDir)Tools\CSCli\bin\$(ConfigurationName)\CSCli.exe

      IF exist "%25sdk%25\." (
      echo OK: The Microsoft Windows SDK was found.
      ) else (
      echo FAILED: The Microsoft Windows SDK Dir was not found. Check the following path: "%25sdk%25"
      goto EXIT_ERR
      )
      IF exist "%25framework%25\." (
      echo OK: The .NET Framework Dir was found.
      ) else (
      echo FAILED: The Framework-Dir was not found. Check the following path: "%25framework%25"
      goto EXIT_ERR
      )
      IF exist "%25inlineILCompiler%25" (
      echo OK: Found the inline-il-compiler.
      ) else (
      echo FAILED: The inline-il-compiler was not found. Check the following path: "%25inlineILCompiler%25"
      goto EXIT_ERR
      )
      IF exist "%25cscli%25" (
      echo OK: Found the cscli-compiler.
      ) else (
      echo FAILED: The cscli was not found. Check the following path: "%25cscli%25"
      goto EXIT_ERR
      )

      if $(ConfigurationName) == Debug (
      echo Build-Configuration: DEBUG
      echo    DEBUG=IMPL
      echo    NO OPTIMIZE
      set ilasm_args=/DLL /DEBUG=IMPL
      ) else (
      if $(ConfigurationName) == Release (
      echo Build-Configuration: RELEASE
      echo    NO DEBUG
      echo    OPTIMIZE
      set ilasm_args=/DLL /OPTIMIZE
      ) else (
      echo FAILED: Invalid Configuration.
      goto EXIT_ERR
      )
      )

      echo.
      echo.
      echo Calling the inline-il-compiler ...
      call "%25inlineILCompiler%25"

      echo.
      echo.
      echo Calling CSCli ...
      call "%25cscli%25" -file:"$(TargetPath)" -r:"RemoveObjAttribute" -c:"CSCalliAttribute"

      :EXIT
      EXIT /B %25errorCode%25

      :EXIT_ERR
      set errorCode=-1
      goto EXIT
</PostBuildEvent>
    <PreBuildEvent />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugType>full</DebugType>
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <DefineConstants>TRACE;DEBUG;FLAC_DEBUG</DefineConstants>
    <UseVSHostingProcess>true</UseVSHostingProcess>
    <DocumentationFile>bin\$(Configuration)\CSCore.XML</DocumentationFile>
    <NoWarn>1573</NoWarn>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <DocumentationFile>bin\$(Configuration)\CSCore.XML</DocumentationFile>
    <NoWarn>1591</NoWarn>
    <GenerateSerializationAssemblies>Off</GenerateSerializationAssemblies>
    <UseVSHostingProcess>false</UseVSHostingProcess>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>
  <PropertyGroup>
    <RunPostBuildEvent>OnOutputUpdated</RunPostBuildEvent>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <OutputPath>bin\$(Platform)\$(Configuration)\</OutputPath>
    <DebugType>full</DebugType>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <OutputPath>bin\$(Platform)\$(Configuration)\</OutputPath>
    <DebugType>pdbonly</DebugType>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x86'">
    <OutputPath>bin\$(Platform)\$(Configuration)\</OutputPath>
    <DebugType>full</DebugType>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
    <OutputPath>bin\$(Platform)\$(Configuration)\</OutputPath>
    <DebugType>pdbonly</DebugType>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup>
    <AssemblyOriginatorKeyFile />
  </PropertyGroup>
  <PropertyGroup>
    <PostBuildEvent>@echo off &amp; setLocal EnableDELAYedeXpansion
      chcp 65001

      set errorCode=0

      set target=$(TargetPath)
      set project=$(ProjectPath)

      set sdk=%25PROGRAMFILES(x86)%25\Microsoft SDKs\Windows\v8.1A\bin\NETFX 4.5.1 Tools
      set framework=%25WINDIR%25\Microsoft.NET\Framework\v2.0.50727
      set inlineILCompiler=$(SolutionDir)Tools\InlineILCompiler\InlineILCompiler\bin\$(ConfigurationName)\InlineILCompiler.exe
      set cscli=$(SolutionDir)Tools\CSCli\bin\$(ConfigurationName)\CSCli.exe

      IF exist "%25sdk%25\." (
      echo OK: The Microsoft Windows SDK was found.
      ) else (
      echo FAILED: The Microsoft Windows SDK Dir was not found. Check the following path: "%25sdk%25"
      goto EXIT_ERR
      )
      IF exist "%25framework%25\." (
      echo OK: The .NET Framework Dir was found.
      ) else (
      echo FAILED: The Framework-Dir was not found. Check the following path: "%25framework%25"
      goto EXIT_ERR
      )
      IF exist "%25inlineILCompiler%25" (
      echo OK: Found the inline-il-compiler.
      ) else (
      echo FAILED: The inline-il-compiler was not found. Check the following path: "%25inlineILCompiler%25"
      goto EXIT_ERR
      )
      IF exist "%25cscli%25" (
      echo OK: Found the cscli-compiler.
      ) else (
      echo FAILED: The cscli was not found. Check the following path: "%25cscli%25"
      goto EXIT_ERR
      )

      if $(ConfigurationName) == Debug (
      echo Build-Configuration: DEBUG
      echo    DEBUG=IMPL
      echo    NO OPTIMIZE
      set ilasm_args=/DLL /DEBUG=IMPL
      ) else (
      if $(ConfigurationName) == Release (
      echo Build-Configuration: RELEASE
      echo    NO DEBUG
      echo    OPTIMIZE
      set ilasm_args=/DLL /OPTIMIZE
      ) else (
      echo FAILED: Invalid Configuration.
      goto EXIT_ERR
      )
      )

      echo.
      echo.
      echo Calling the inline-il-compiler ...
      call "%25inlineILCompiler%25"

      echo.
      echo.
      echo Calling CSCli ...
      call "%25cscli%25" -file:"$(TargetPath)" -r:"RemoveObjAttribute" -c:"CSCalliAttribute"

      :EXIT
      EXIT /B %25errorCode%25

      :EXIT_ERR
      set errorCode=-1
      goto EXIT
</PostBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <PreBuildEvent />
  </PropertyGroup>
  <ItemGroup>
    <None Remove=".gitattributes" />
    <None Remove=".gitignore" />
  </ItemGroup>
  <ItemGroup>
    <Compile Update="AudioSubTypes.cs">
      <DependentUpon>AudioSubTypes.tt</DependentUpon>
      <SubType>Code</SubType>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="AudioSubTypes.Utils.cs">
      <DependentUpon>AudioSubTypes.tt</DependentUpon>
    </Compile>
    <Compile Update="Codecs\FLAC\FlacFrame_GetBuffer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>FlacFrame_GetBuffer.tt</DependentUpon>
    </Compile>
    <Compile Update="Codecs\FLAC\SubFrames\FlacSubFrameLPC_Calculation.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>FlacSubFrameLPC_Calculation.tt</DependentUpon>
    </Compile>
    <None Include="AudioSubTypes.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>AudioSubTypes.cs</LastGenOutput>
    </None>
    <None Include="Base.cd" />
    <None Include="Codecs\FLAC\FlacFrame_GetBuffer.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>FlacFrame_GetBuffer.cs</LastGenOutput>
    </None>
    <None Include="Codecs\FLAC\SubFrames\FlacSubFrameLPC_Calculation.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>FlacSubFrameLPC_Calculation.cs</LastGenOutput>
    </None>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="System.Drawing.Common" Version="4.7.0" />
  </ItemGroup>
</Project>
